{"version":3,"sources":["components/ModalWIndow.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","button","display","marginTop","root","borderTopRightRadius","borderBottomRightRadius","padding","dialogTitle","fontSize","fontWeight","alignItems","color","icon","dialogTitleIcon","paddingLeft","marginRight","rootItem","borderRadius","maxWidth","width","marginLeft","formField","dialogContainer","formButton","border","marginBottom","selectBorder","dialogBold","fieldContainer","dialogDescription","dialogAnchor","textDecoration","dialogButtonIcon","labelButton","THEME","createMuiTheme","typography","DialogTitle","withStyles","margin","spacing","closeButton","position","right","top","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","Close","DialogContent","MuiDialogContent","CustomizedDialogs","data","onPreview","selectedFields","console","log","React","useState","isOpenModal","setOpenModal","fieldLabels","resultArray","key","map","item","i","label","includes","value","dialogData","setDialogData","Button","bind","this","JSON","stringify","Dialog","paper","aria-labelledby","open","id","SaveAlt","dividers","gutterBottom","href","noValidate","autoComplete","FormControl","InputLabel","htmlFor","OutlinedInput","onChange","e","number","text","currentFields","changeFieldText","target","Select","outlined","updatedFields","setDialogField","displayEmpty","IconComponent","ExpandMore","defaultValue","MenuItem","autoFocus","result","forEach","preparedPreviewObj","Cached","App","Phone","Email","Contacts","Name","obj","alert","Wrong_Concats","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2cc36f3.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles, createMuiTheme, MuiThemeProvider, makeStyles} from '@material-ui/core/styles';\nimport {Button, Dialog, Select, MenuItem, OutlinedInput, FormControl, InputLabel, Typography, IconButton, DialogTitle as MuiDialogTitle, DialogContent as MuiDialogContent } from '@material-ui/core';\nimport {Close as CloseIcon, ExpandMore, SaveAlt, Cached as CachedIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: 10,\n  },\n  root: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    padding: '1px 0',\n  },\n  dialogTitle: {\n    fontSize: 14,\n    fontWeight: 700,\n    display: 'flex',\n    alignItems: 'center',\n    color: '#455A64',\n  },\n  icon: {\n    color: '#1E88E5',\n  },\n  dialogTitleIcon: {\n    paddingLeft: 0,\n    marginRight: 13,\n    color: '#455A64',\n  },\n  rootItem: {\n    borderRadius: 0,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: '#1E88E5',\n    fontWeight: 600,\n    maxWidth: 204,\n    width: '100%',\n    marginLeft: 5,\n  },\n  formField: {\n    width: '100%',\n  },\n  dialogContainer: {\n    maxWidth: 700,\n    width: '100%',\n  },\n  formButton: {\n    width: '100%',\n    border: '2px solid #1E88E5',\n    borderRadius: 4,\n    fontSize: 13,\n    color: '#1E88E5',\n    fontWeight: 600,\n    marginTop: 10,\n    marginBottom: 5,\n  },\n  selectBorder: {\n    border: '1px solid #A3D2FC',\n  },\n  dialogBold: {\n    fontWeight: 700,\n    color: '#455A64',\n    marginBottom: 16,\n  },\n  fieldContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  dialogDescription: {\n    fontWeight: 500,\n    fontSize: 12,\n    color: '#99ABB4',\n  },\n  dialogAnchor: {\n    fontWeight: 700,\n    color: '#1E88E5',\n    textDecoration: 'underline',\n  },\n  dialogButtonIcon: {\n    marginRight: 5,\n  },\n  labelButton: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n    padding: 0,\n  },\n});\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": \"\\\"Montserrat\\\", sans-serif\",\n   \"fontSize\": 14,\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function CustomizedDialogs({data, onPreview, selectedFields}) {\n  console.log(selectedFields);\n\n  const classes = useStyles();\n  const [isOpenModal, setOpenModal] = React.useState(false);\n  const fieldLabels = ['', 'Name', 'Phone', 'Email', 'Contacts']; //пустая строка для \"Не выбрано\"\n  const [dialogData, setDialogData] = React.useState(() => {\n    if (selectedFields) {\n      let resultArray = [];\n      for (const key in selectedFields) {\n        resultArray[selectedFields[key]] = key; \n      }\n\n      return data.map( (item, i) => {\n        return {\n          label: fieldLabels.includes(resultArray[i]) ? resultArray[i] : '' ,\n          value: item\n        }\n      });\n    }\n\n    return data.map( (item, i) => {\n      return {\n        label: '',\n        value: item\n      };\n    });\n  });\n\n  const setDialogField = (number, value) => {\n    let updatedFields = dialogData.map( (item, i) => {\n      if (i === number) return {\n        ...item,\n        label: value\n      };\n\n      return item;\n    });;\n\n    setDialogData(updatedFields);\n  }\n\n  const changeFieldText = (number, text) => {\n    let currentFields = dialogData.map( (item, i) => {\n      if (i === number) return {\n        label: item.label,\n        value: text\n      };\n\n      return item;\n    });\n    setDialogData(currentFields);\n  }\n\n  const preparedPreviewObj = (data) => {\n    let result = {};\n\n    data.forEach( (item, i) => { \n      if (item.label) result[item.label] = i;\n    });\n\n    return result;\n  }\n\n  return (\n    <MuiThemeProvider theme={THEME}>\n        <Button className={classes.button} variant=\"outlined\" color={selectedFields ? 'primary' : 'secondary'} onClick={setOpenModal.bind(this, true)}>\n          Open dialog {selectedFields ?  `with selected: ${JSON.stringify(selectedFields)}` : 'without selected' }\n        </Button>\n\n        <Dialog classes={{paper: classes.dialogContainer}} onClose={setOpenModal.bind(this, false)} aria-labelledby=\"customized-dialog-title\" open={isOpenModal}>\n        <DialogTitle className={classes.dialogTitle} id=\"customized-dialog-title\" onClose={setOpenModal.bind(this, false)}>\n          <span className={classes.dialogTitle}>\n            <SaveAlt className={classes.dialogTitleIcon} />  Import Customers Base\n          </span>\n        </DialogTitle>\n        \n        <DialogContent dividers>\n          <Typography classes={{root: classes.dialogBold}}>\n            Fields from uploaded CSV file\n          </Typography>\n          <Typography gutterBottom className={classes.dialogDescription}>\n            Please choose correct columns and click Show Table Preview to see your imported data.\n            <br /><a href=\"/\" className={classes.dialogAnchor}>Send us your base file</a> and we'll import it ourselves if you have any problems with that.\n          </Typography>\n        </DialogContent>\n\n        <DialogContent>\n          <form noValidate autoComplete=\"off\">\n            {dialogData.map( (item, i) => \n              <div key={i} className={classes.fieldContainer}>\n                <FormControl className={classes.formField} variant=\"outlined\">\n                  <InputLabel htmlFor=\"component-outlined\">Field {i}</InputLabel>\n\n                  <OutlinedInput\n                    id=\"component-outlined\"\n                    value={item.value}\n                    label={`Field ${i}`}\n                    classes={{root: classes.root}}\n                    onChange={ (e) => changeFieldText(i, e.target.value)}\n                  />\n                </FormControl>\n                <Select \n                  className={classes.rootItem} \n                  classes={{icon: classes.icon, outlined: classes.selectBorder}} \n                  value={item.label} \n                  onChange={(e) => setDialogField(i, e.target.value)} \n                  displayEmpty \n                  variant=\"outlined\" \n                  IconComponent={ExpandMore}\n                  defaultValue=''\n                >\n                  {\n                    fieldLabels.map( item => <MenuItem key={item} value={item}>{item === '' ? 'Не выбрано' : item}</MenuItem>)\n                  }\n                </Select>\n              </div>\n            )}\n\n            <Button autoFocus onClick={onPreview.bind(this, preparedPreviewObj(dialogData))} color=\"primary\" classes={{root: classes.formButton, label: classes.labelButton}}>\n              <CachedIcon className={classes.dialogButtonIcon} /> Show Table Preview\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </MuiThemeProvider>\n  );\n}\n","import React from 'react';\n\nimport ModalWindow from './components/ModalWIndow';\n\nfunction App() {\n  let data = ['phone', 'email','concats', 'name'];\n  return (\n    <>\n    <ModalWindow selectedFields={{Phone: 1, Email: 2, Contacts : 0, Name: 3}} onPreview={(obj) => alert(JSON.stringify(obj))} data={data} />\n    <ModalWindow selectedFields={{Phone: 1, Email: 2, Wrong_Concats : 0, Name: 3}} onPreview={(obj) => alert(JSON.stringify(obj))} data={data} />\n\n    <ModalWindow onPreview={(obj) => alert(JSON.stringify(obj))} data={['name', 'email','phone', 'contacts']} />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}